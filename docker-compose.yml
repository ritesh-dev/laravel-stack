version: "3.9"

services:
  app:
    build:
      context: ./docker/php
      args:
        PHP_TAG: ${PHP_TAG:-alpine}
    image: "dynamic-laravel-app:${PHP_TAG:-latest}"
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./src:/var/www
      - ./docker/php/conf.d/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini:ro
    environment:
      - APP_ENV=${APP_ENV:-local}
    depends_on:
      - mysql
      - redis
    networks:
      - stack

  nginx:
    image: nginx:alpine
    container_name: laravel_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./src:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - stack

  mysql:
    image: mysql:${MYSQL_TAG:-latest}
    container_name: laravel_mysql
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootsecret}
      MYSQL_DATABASE: ${DB_DATABASE:-laravel}
      MYSQL_USER: ${DB_USERNAME:-laravel}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - stack

  redis:
    image: redis:${REDIS_TAG:-alpine}
    container_name: laravel_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - stack

  node:
    build:
      context: ./docker/node
      args:
        NODE_TAG: ${NODE_TAG:-lts-alpine}
    container_name: laravel_node
    working_dir: /var/www
    volumes:
      - ./src:/var/www
    command: sh -c "npm install --no-audit --no-fund && npm run dev"
    networks:
      - stack

networks:
  stack:
    driver: bridge

volumes:
  mysql_data:
  redis_data: